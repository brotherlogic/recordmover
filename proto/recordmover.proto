syntax = "proto3";

package recordmover;

import "github.com/brotherlogic/recordcollection/proto/recordcollection.proto";

message RecordedMove {
  // The record being moved
  int32 instance_id = 1;

  // The time of the move
  int64 move_time = 2;

  // The eventual destination of the move
  string move_location = 3;
}

message Config {
  repeated RecordMove moves = 1;
  repeated RecordedMove move_archive = 2;
}

message Context {
  recordcollection.Record before = 1;
  string location = 2;
  recordcollection.Record after = 3;
  int32 slot = 4;
}

message RecordMove {
  int32 instance_id = 1;
  int32 from_folder = 2;
  int32 to_folder = 3;
  int64 move_date = 4;

  recordcollection.Record record = 5;
  Context before_context = 6;
  Context after_context = 7;

  int64 last_update = 8;
}

message Moves {
  repeated RecordMove moves = 1;
}

message MoveRequest {
  RecordMove move = 1;
}

message MoveResponse {}

message ListRequest {}

message ListResponse {
  repeated RecordMove moves = 1;
}

message ClearRequest {
  int32 instance_id = 1;
}

message ClearResponse {}

service MoveService {
  rpc RecordMove(MoveRequest) returns (MoveResponse) {};
  rpc ListMoves(ListRequest) returns (ListResponse) {};
  rpc ClearMove(ClearRequest) returns (ClearResponse) {};
}
